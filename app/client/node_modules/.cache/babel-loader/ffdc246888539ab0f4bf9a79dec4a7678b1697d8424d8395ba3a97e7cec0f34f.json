{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tokenize = void 0;\nconst TokenRule = /(?:%(?<flag>([+0-]|-\\+))?(?<width>\\d+)?(?<position>\\d+\\$)?(?<precision>\\.\\d+)?(?<conversion>[%BCESb-iosux]))|(\\\\%)/g;\nconst tokenize = subject => {\n  let matchResult;\n  const tokens = [];\n  let argumentIndex = 0;\n  let lastIndex = 0;\n  let lastToken = null;\n  while ((matchResult = TokenRule.exec(subject)) !== null) {\n    if (matchResult.index > lastIndex) {\n      lastToken = {\n        literal: subject.slice(lastIndex, matchResult.index),\n        type: 'literal'\n      };\n      tokens.push(lastToken);\n    }\n    const match = matchResult[0];\n    lastIndex = matchResult.index + match.length;\n    if (match === '\\\\%' || match === '%%') {\n      if (lastToken && lastToken.type === 'literal') {\n        lastToken.literal += '%';\n      } else {\n        lastToken = {\n          literal: '%',\n          type: 'literal'\n        };\n        tokens.push(lastToken);\n      }\n    } else if (matchResult.groups) {\n      lastToken = {\n        conversion: matchResult.groups.conversion,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any -- intentional per @gajus\n        flag: matchResult.groups.flag || null,\n        placeholder: match,\n        position: matchResult.groups.position ? Number.parseInt(matchResult.groups.position, 10) - 1 : argumentIndex++,\n        precision: matchResult.groups.precision ? Number.parseInt(matchResult.groups.precision.slice(1), 10) : null,\n        type: 'placeholder',\n        width: matchResult.groups.width ? Number.parseInt(matchResult.groups.width, 10) : null\n      };\n      tokens.push(lastToken);\n    }\n  }\n  if (lastIndex <= subject.length - 1) {\n    if (lastToken && lastToken.type === 'literal') {\n      lastToken.literal += subject.slice(lastIndex);\n    } else {\n      tokens.push({\n        literal: subject.slice(lastIndex),\n        type: 'literal'\n      });\n    }\n  }\n  return tokens;\n};\nexports.tokenize = tokenize;","map":{"version":3,"names":["Object","defineProperty","exports","value","tokenize","TokenRule","subject","matchResult","tokens","argumentIndex","lastIndex","lastToken","exec","index","literal","slice","type","push","match","length","groups","conversion","flag","placeholder","position","Number","parseInt","precision","width"],"sources":["C:/Users/grhys/Acr0batOG.github.io/app/client/node_modules/fast-printf/dist/src/tokenize.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenize = void 0;\nconst TokenRule = /(?:%(?<flag>([+0-]|-\\+))?(?<width>\\d+)?(?<position>\\d+\\$)?(?<precision>\\.\\d+)?(?<conversion>[%BCESb-iosux]))|(\\\\%)/g;\nconst tokenize = (subject) => {\n    let matchResult;\n    const tokens = [];\n    let argumentIndex = 0;\n    let lastIndex = 0;\n    let lastToken = null;\n    while ((matchResult = TokenRule.exec(subject)) !== null) {\n        if (matchResult.index > lastIndex) {\n            lastToken = {\n                literal: subject.slice(lastIndex, matchResult.index),\n                type: 'literal',\n            };\n            tokens.push(lastToken);\n        }\n        const match = matchResult[0];\n        lastIndex = matchResult.index + match.length;\n        if (match === '\\\\%' || match === '%%') {\n            if (lastToken && lastToken.type === 'literal') {\n                lastToken.literal += '%';\n            }\n            else {\n                lastToken = {\n                    literal: '%',\n                    type: 'literal',\n                };\n                tokens.push(lastToken);\n            }\n        }\n        else if (matchResult.groups) {\n            lastToken = {\n                conversion: matchResult.groups.conversion,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any -- intentional per @gajus\n                flag: matchResult.groups.flag || null,\n                placeholder: match,\n                position: matchResult.groups.position ? Number.parseInt(matchResult.groups.position, 10) - 1 : argumentIndex++,\n                precision: matchResult.groups.precision ? Number.parseInt(matchResult.groups.precision.slice(1), 10) : null,\n                type: 'placeholder',\n                width: matchResult.groups.width ? Number.parseInt(matchResult.groups.width, 10) : null,\n            };\n            tokens.push(lastToken);\n        }\n    }\n    if (lastIndex <= subject.length - 1) {\n        if (lastToken && lastToken.type === 'literal') {\n            lastToken.literal += subject.slice(lastIndex);\n        }\n        else {\n            tokens.push({\n                literal: subject.slice(lastIndex),\n                type: 'literal',\n            });\n        }\n    }\n    return tokens;\n};\nexports.tokenize = tokenize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
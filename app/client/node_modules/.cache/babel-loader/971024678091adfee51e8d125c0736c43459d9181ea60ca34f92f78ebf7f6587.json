{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar patternParts = {\n  value: '[-+]?(?:Infinity|[[0-9]*\\\\.?\\\\d*(?:[eE][-+]?\\\\d+)?)',\n  leftBrace: '[\\\\(\\\\]\\\\[]',\n  delimeter: ',',\n  rightBrace: '[\\\\)\\\\]\\\\[]'\n};\nvar PATTERN = new RegExp(\"(\" + patternParts.leftBrace + \")\" + (\"(\" + patternParts.value + \")?\") + (\"(\" + patternParts.delimeter + \")?\") + (\"(\" + patternParts.value + \")?\") + (\"(\" + patternParts.rightBrace + \")\"));\nfunction execPattern(str) {\n  var match = PATTERN.exec(str);\n  if (!match) {\n    return null;\n  }\n  var _ = match[0],\n    leftBrace = match[1],\n    fromValue = match[2],\n    delimeter = match[3],\n    toValue = match[4],\n    rightBrace = match[5];\n  return {\n    leftBrace: leftBrace,\n    fromValue: fromValue,\n    delimeter: delimeter,\n    toValue: toValue,\n    rightBrace: rightBrace\n  };\n}\nfunction parse(str) {\n  var match = execPattern(str);\n  if (!match) {\n    return null;\n  }\n  return {\n    from: {\n      value: match.fromValue !== undefined ? +match.fromValue : -Infinity,\n      included: match.leftBrace === '['\n    },\n    to: {\n      value: match.toValue !== undefined ? +match.toValue : match.delimeter ? +Infinity : match.fromValue !== undefined ? +match.fromValue : NaN,\n      included: match.rightBrace === ']'\n    }\n  };\n}\nfunction check(interval) {\n  if (interval.from.value === interval.to.value) {\n    return interval.from.included && interval.to.included;\n  }\n  return Math.min(interval.from.value, interval.to.value) === interval.from.value;\n}\nfunction entry(str) {\n  var interval = parse(str);\n  if (!interval || !check(interval)) {\n    return null;\n  }\n  return interval;\n}\nexports.default = entry;","map":{"version":3,"names":["Object","defineProperty","exports","value","patternParts","leftBrace","delimeter","rightBrace","PATTERN","RegExp","execPattern","str","match","exec","_","fromValue","toValue","parse","from","undefined","Infinity","included","to","NaN","check","interval","Math","min","entry","default"],"sources":["C:/Users/grhys/Acr0batOG.github.io/app/client/node_modules/math-interval-parser/lib/index.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar patternParts = {\n    value: '[-+]?(?:Infinity|[[0-9]*\\\\.?\\\\d*(?:[eE][-+]?\\\\d+)?)',\n    leftBrace: '[\\\\(\\\\]\\\\[]',\n    delimeter: ',',\n    rightBrace: '[\\\\)\\\\]\\\\[]',\n};\nvar PATTERN = new RegExp(\"(\" + patternParts.leftBrace + \")\" +\n    (\"(\" + patternParts.value + \")?\") +\n    (\"(\" + patternParts.delimeter + \")?\") +\n    (\"(\" + patternParts.value + \")?\") +\n    (\"(\" + patternParts.rightBrace + \")\"));\nfunction execPattern(str) {\n    var match = PATTERN.exec(str);\n    if (!match) {\n        return null;\n    }\n    var _ = match[0], leftBrace = match[1], fromValue = match[2], delimeter = match[3], toValue = match[4], rightBrace = match[5];\n    return {\n        leftBrace: leftBrace,\n        fromValue: fromValue,\n        delimeter: delimeter,\n        toValue: toValue,\n        rightBrace: rightBrace,\n    };\n}\nfunction parse(str) {\n    var match = execPattern(str);\n    if (!match) {\n        return null;\n    }\n    return {\n        from: {\n            value: match.fromValue !== undefined ?\n                +match.fromValue :\n                -Infinity,\n            included: match.leftBrace === '['\n        },\n        to: {\n            value: match.toValue !== undefined ?\n                +match.toValue :\n                (match.delimeter ?\n                    +Infinity :\n                    match.fromValue !== undefined ?\n                        +match.fromValue :\n                        NaN),\n            included: match.rightBrace === ']'\n        }\n    };\n}\nfunction check(interval) {\n    if (interval.from.value === interval.to.value) {\n        return interval.from.included && interval.to.included;\n    }\n    return Math.min(interval.from.value, interval.to.value) === interval.from.value;\n}\nfunction entry(str) {\n    var interval = parse(str);\n    if (!interval || !check(interval)) {\n        return null;\n    }\n    return interval;\n}\nexports.default = entry;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}